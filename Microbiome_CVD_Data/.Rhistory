install.packages("BiocManager")
BiocManager::install("curatedMetagenomicData")
a
install.packages("dplyr")
library(dplyr)
library(dplyr)
library(curatedMetagenomicData)
library(dplyr)
library(curatedMetagenomicData)
library(curatedMetagenomicData)
library(dplyr)
# Load CVD-relevant study
data <- curatedMetagenomicData("ZellerG_2016.relative_abundance", dryrun=FALSE)[[1]]
# Load CVD-relevant study
data <- curatedMetagenomicData("ZellerG_2016.relative_abundance", dryrun=FALSE)[[1]]
library(curatedMetagenomicData)
library(dplyr)
# Load CVD-relevant study
data <- curatedMetagenomicData("ZellerG_2016.relative_abundance", dryrun=FALSE)[[1]]
library(curatedMetagenomicData)
data(sampleMetadata)
# View available studies
unique(sampleMetadata$study_name)
data <- curatedMetagenomicData("JieZ_2017.relative_abundance", dryrun = FALSE)[[1]]
# STEP 3: Merge
full_data <- inner_join(microbes, meta, by = "SampleID")
library(curatedMetagenomicData)
library(dplyr)
# STEP 1: Load ZellerG_2016 dataset
data <- curatedMetagenomicData("JieZ_2017.relative_abundance", dryrun=FALSE)[[1]]
# STEP 2: Microbial abundance + metadata
microbes <- as.data.frame(exprs(data)); microbes$SampleID <- rownames(microbes)
meta <- pData(data); meta$SampleID <- rownames(meta)
# Install if not already
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("curatedMetagenomicData", update = FALSE, ask = FALSE)
library(curatedMetagenomicData)
library(dplyr)
# STEP 1: Load the JieZ_2017 relative abundance data
data <- curatedMetagenomicData("JieZ_2017.relative_abundance", dryrun=FALSE)[[1]]
# STEP 2: Extract abundance table
microbes <- as.data.frame(exprs(data))
microbes$SampleID <- rownames(microbes)
View(microbes)
View(sampleMetadata)
View(data)
# STEP 3: Extract metadata
meta <- pData(data)
meta$SampleID <- rownames(meta)
# Install (if not already)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("curatedMetagenomicData", update = FALSE, ask = FALSE)
library(curatedMetagenomicData)
library(dplyr)
# STEP 1: Load the JieZ_2017 relative abundance data
data <- curatedMetagenomicData("JieZ_2017.relative_abundance", dryrun=FALSE)[[1]]
# STEP 2: Extract abundance table
microbes <- as.data.frame(assay(data))  # use assay() instead of exprs()
View(microbes)
View(microbes)
microbes$SampleID <- rownames(microbes)
# STEP 3: Extract metadata using colData()
meta <- as.data.frame(colData(data))
meta$SampleID <- rownames(meta)
# STEP 4: Merge abundance + metadata
full_data <- inner_join(microbes, meta, by = "SampleID")
View(full_data)
View(full_data)
# STEP 5: Select features + metadata (you can expand taxa as needed)
selected <- full_data %>%
select(SampleID, contains("Collinsella"), contains("Faecalibacterium"),
contains("Prevotella"), contains("Roseburia"), contains("Streptococcus"),
age, bmi, disease)
names(meta)
View(sampleMetadata)
View(microbes)
View(data)
View(full_data)
View(sampleMetadata)
gc()
install.packages("BiocManager")
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install("curatedMetagenomicData", update = FALSE, ask = FALSE)
library(curatedMetagenomicData)
library(dplyr)
# STEP 1: Load the JieZ_2017 relative abundance data
data <- curatedMetagenomicData("JieZ_2017.relative_abundance", dryrun=FALSE)[[1]]
# STEP 2: Extract abundance table
microbes <- as.data.frame(assay(data))  # use assay() instead of exprs()
microbes$SampleID <- rownames(microbes)
# STEP 3: Extract metadata using colData()
meta <- as.data.frame(colData(data))
meta$SampleID <- rownames(meta)
# Merge still the same
full_data <- inner_join(microbes, meta, by = "SampleID")
# Updated selection with correct column names
selected <- full_data %>%
select(SampleID,
contains("Collinsella"), contains("Faecalibacterium"),
contains("Prevotella"), contains("Roseburia"), contains("Streptococcus"),
age_category, BMI, disease)
# Rename columns (optional for consistency)
selected <- selected %>%
rename(age_group = age_category, bmi = BMI)
# Binary label: 1 = CVD patient
selected$has_CVD <- ifelse(grepl("atherosclerosis|cardiovascular", selected$disease, ignore.case = TRUE), 1, 0)
# Save
write.csv(selected, "jie_2017_cvd_microbiome.csv", row.names = FALSE)
View(full_data)
# Check a sample of column names in `microbes`
head(colnames(microbes), 20)
View(data)
View(full_data)
View(meta)
View(microbes)
View(meta)
View(microbes)
# 1. Install packages if not already
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("curatedMetagenomicData", update = FALSE, ask = FALSE)
# 2. Load libraries
library(curatedMetagenomicData)
library(dplyr)
# 3. Load relative abundance table from JieZ_2017
data <- curatedMetagenomicData("JieZ_2017.relative_abundance", dryrun = FALSE)[[1]]
# 4. Extract features + metadata
microbes <- as.data.frame(assay(data))
microbes$SampleID <- rownames(microbes)
meta <- as.data.frame(colData(data))
meta$SampleID <- rownames(meta)
# 5. Merge abundance and metadata
full_data <- inner_join(microbes, meta, by = "SampleID")
# Define genus/species of interest (modify as needed)
target_microbes <- c("Collinsella", "Faecalibacterium", "Prevotella",
"Roseburia", "Streptococcus", "Tyzzerella",
"Eubacterium", "Akkermansia", "Enterobacter",
"Ruminococcus", "Bacteroides")
# Find matching columns using grepl
selected_features <- colnames(microbes)[
grepl(paste(target_microbes, collapse = "|"), colnames(microbes), ignore.case = TRUE)
]
# Build final dataset
selected <- full_data %>%
select(SampleID, all_of(selected_features),
BMI, age_category, disease) %>%
rename(bmi = BMI, age_group = age_category)
# Add binary label: has_CVD = 1 if CVD-related disease present
selected$has_CVD <- ifelse(grepl("atherosclerosis|cardiovascular", selected$disease, ignore.case = TRUE), 1, 0)
# View dimensions and preview
cat("Rows:", nrow(selected), "Cols:", ncol(selected), "\n")
print(head(selected, 3))
# Save for ML pipeline
write.csv(selected, "jie_2017_cvd_microbiome.csv", row.names = FALSE)
# Save for ML pipeline
write.csv(selected, "jiez_2017_cvd_microbiome.csv", row.names = FALSE)
View(selected)
View(microbes)
View(meta)
View(full_data)
gc()
# Install once if needed
BiocManager::install("curatedMetagenomicData")
library(curatedMetagenomicData)
library(SummarizedExperiment)
library(stringr)   # for str_detect
library(dplyr)     # tidy data wrangling
library(tibble)    # rownames_to_column
# 1️⃣  Pull the dataset ----------------------------------------------------------
se <- curatedMetagenomicData("JieZ_2017.relative_abundance", dryrun = FALSE)[[1]]
# 2️⃣  Extract the abundance matrix & convert to data frame ----------------------
abund_df <- assay(se) %>%            # matrix [features × samples]
t() %>%                            # transpose → samples × features
as.data.frame() %>%
rownames_to_column(var = "SampleID")
View(se)
View(abund_df)
# 3️⃣  Grab metadata & clean column names ---------------------------------------
meta_df <- colData(se) %>%
as.data.frame() %>%
rownames_to_column(var = "SampleID") %>%
transmute(
SampleID,
age_group = age_category,
bmi       = BMI,
disease   = disease
)
View(meta_df)
# 4️⃣  Join, create has_CVD label ----------------------------------------------
full_df <- abund_df %>%
left_join(meta_df, by = "SampleID") %>%
mutate(
has_CVD = if_else(
str_detect(tolower(disease), "atherosclerosis|cardiovascular"),
1L, 0L
)
)
View(full_df)
View(full_df)
# 5️⃣  Write out ----------------------------------------------------------------
write.csv(full_df, "jie_2017_cvd_microbiome_full.csv", row.names = FALSE)
cat("✅ Saved: jie_2017_cvd_microbiome_full.csv\n")
# 4️⃣  Join, create has_CVD label ----------------------------------------------
full_df <- abund_df %>%
left_join(meta_df, by = "SampleID") %>%
mutate(
has_CVD = if_else(
str_detect(tolower(disease), "atherosclerosis|cardiovascular|acvd"),
1L, 0L
)
)
# 5️⃣  Write out ----------------------------------------------------------------
write.csv(full_df, "jie_2017_cvd_microbiome_full.csv", row.names = FALSE)
cat("✅ Saved: jie_2017_cvd_microbiome_full.csv\n")
table(full_df$has_CVD)
#  0   1
# 220 165   # ← matches the 165 ACVD cases reported in the paper
